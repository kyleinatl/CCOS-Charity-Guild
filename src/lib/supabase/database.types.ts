// Auto-generated database types for Supabase
// This file should be generated using: supabase gen types typescript --project-id <project-ref>

export interface Database {
  public: {
    Tables: {
      members: {
        Row: {
          id: string;
          email: string;
          first_name: string;
          last_name: string;
          phone: string | null;
          address_line1: string | null;
          address_line2: string | null;
          city: string | null;
          state: string | null;
          zip_code: string | null;
          country: string;
          tier: 'bronze' | 'silver' | 'gold' | 'platinum';
          total_donated: number;
          last_donation_date: string | null;
          member_since: string;
          engagement_score: number;
          email_subscribed: boolean;
          sms_subscribed: boolean;
          newsletter_subscribed: boolean;
          date_of_birth: string | null;
          occupation: string | null;
          employer: string | null;
          interests: string[] | null;
          notes: string | null;
          created_at: string;
          updated_at: string;
          created_by: string | null;
          updated_by: string | null;
        };
        Insert: {
          id?: string;
          email: string;
          first_name: string;
          last_name: string;
          phone?: string | null;
          address_line1?: string | null;
          address_line2?: string | null;
          city?: string | null;
          state?: string | null;
          zip_code?: string | null;
          country?: string;
          tier?: 'bronze' | 'silver' | 'gold' | 'platinum';
          total_donated?: number;
          last_donation_date?: string | null;
          member_since?: string;
          engagement_score?: number;
          email_subscribed?: boolean;
          sms_subscribed?: boolean;
          newsletter_subscribed?: boolean;
          date_of_birth?: string | null;
          occupation?: string | null;
          employer?: string | null;
          interests?: string[] | null;
          notes?: string | null;
          created_at?: string;
          updated_at?: string;
          created_by?: string | null;
          updated_by?: string | null;
        };
        Update: {
          id?: string;
          email?: string;
          first_name?: string;
          last_name?: string;
          phone?: string | null;
          address_line1?: string | null;
          address_line2?: string | null;
          city?: string | null;
          state?: string | null;
          zip_code?: string | null;
          country?: string;
          tier?: 'bronze' | 'silver' | 'gold' | 'platinum';
          total_donated?: number;
          last_donation_date?: string | null;
          member_since?: string;
          engagement_score?: number;
          email_subscribed?: boolean;
          sms_subscribed?: boolean;
          newsletter_subscribed?: boolean;
          date_of_birth?: string | null;
          occupation?: string | null;
          employer?: string | null;
          interests?: string[] | null;
          notes?: string | null;
          created_at?: string;
          updated_at?: string;
          created_by?: string | null;
          updated_by?: string | null;
        };
      };
      donations: {
        Row: {
          id: string;
          member_id: string;
          amount: number;
          donation_date: string;
          method: 'online' | 'check' | 'cash' | 'credit_card' | 'bank_transfer';
          designation: string;
          transaction_id: string | null;
          payment_processor: string | null;
          processing_fee: number;
          net_amount: number;
          receipt_sent: boolean;
          receipt_sent_date: string | null;
          tax_deductible: boolean;
          receipt_number: string | null;
          is_recurring: boolean;
          recurring_frequency: string | null;
          recurring_end_date: string | null;
          parent_donation_id: string | null;
          anonymous: boolean;
          public_acknowledgment: boolean;
          notes: string | null;
          created_at: string;
          updated_at: string;
          created_by: string | null;
        };
        Insert: {
          id?: string;
          member_id: string;
          amount: number;
          donation_date?: string;
          method: 'online' | 'check' | 'cash' | 'credit_card' | 'bank_transfer';
          designation?: string;
          transaction_id?: string | null;
          payment_processor?: string | null;
          processing_fee?: number;
          receipt_sent?: boolean;
          receipt_sent_date?: string | null;
          tax_deductible?: boolean;
          receipt_number?: string | null;
          is_recurring?: boolean;
          recurring_frequency?: string | null;
          recurring_end_date?: string | null;
          parent_donation_id?: string | null;
          anonymous?: boolean;
          public_acknowledgment?: boolean;
          notes?: string | null;
          created_at?: string;
          updated_at?: string;
          created_by?: string | null;
        };
        Update: {
          id?: string;
          member_id?: string;
          amount?: number;
          donation_date?: string;
          method?: 'online' | 'check' | 'cash' | 'credit_card' | 'bank_transfer';
          designation?: string;
          transaction_id?: string | null;
          payment_processor?: string | null;
          processing_fee?: number;
          receipt_sent?: boolean;
          receipt_sent_date?: string | null;
          tax_deductible?: boolean;
          receipt_number?: string | null;
          is_recurring?: boolean;
          recurring_frequency?: string | null;
          recurring_end_date?: string | null;
          parent_donation_id?: string | null;
          anonymous?: boolean;
          public_acknowledgment?: boolean;
          notes?: string | null;
          created_at?: string;
          updated_at?: string;
          created_by?: string | null;
        };
      };
      events: {
        Row: {
          id: string;
          name: string;
          description: string | null;
          event_type: string | null;
          start_date: string;
          end_date: string | null;
          registration_deadline: string | null;
          venue_name: string | null;
          venue_address: string | null;
          is_virtual: boolean;
          virtual_link: string | null;
          status: 'draft' | 'published' | 'active' | 'completed' | 'cancelled';
          capacity: number | null;
          current_registrations: number;
          waitlist_enabled: boolean;
          ticket_price: number;
          member_discount_percent: number;
          early_bird_price: number | null;
          early_bird_deadline: string | null;
          fundraising_goal: number | null;
          total_raised: number;
          image_url: string | null;
          requires_approval: boolean;
          tags: string[] | null;
          created_at: string;
          updated_at: string;
          created_by: string | null;
          updated_by: string | null;
        };
        Insert: {
          id?: string;
          name: string;
          description?: string | null;
          event_type?: string | null;
          start_date: string;
          end_date?: string | null;
          registration_deadline?: string | null;
          venue_name?: string | null;
          venue_address?: string | null;
          is_virtual?: boolean;
          virtual_link?: string | null;
          status?: 'draft' | 'published' | 'active' | 'completed' | 'cancelled';
          capacity?: number | null;
          current_registrations?: number;
          waitlist_enabled?: boolean;
          ticket_price?: number;
          member_discount_percent?: number;
          early_bird_price?: number | null;
          early_bird_deadline?: string | null;
          fundraising_goal?: number | null;
          total_raised?: number;
          image_url?: string | null;
          requires_approval?: boolean;
          tags?: string[] | null;
          created_at?: string;
          updated_at?: string;
          created_by?: string | null;
          updated_by?: string | null;
        };
        Update: {
          id?: string;
          name?: string;
          description?: string | null;
          event_type?: string | null;
          start_date?: string;
          end_date?: string | null;
          registration_deadline?: string | null;
          venue_name?: string | null;
          venue_address?: string | null;
          is_virtual?: boolean;
          virtual_link?: string | null;
          status?: 'draft' | 'published' | 'active' | 'completed' | 'cancelled';
          capacity?: number | null;
          current_registrations?: number;
          waitlist_enabled?: boolean;
          ticket_price?: number;
          member_discount_percent?: number;
          early_bird_price?: number | null;
          early_bird_deadline?: string | null;
          fundraising_goal?: number | null;
          total_raised?: number;
          image_url?: string | null;
          requires_approval?: boolean;
          tags?: string[] | null;
          created_at?: string;
          updated_at?: string;
          created_by?: string | null;
          updated_by?: string | null;
        };
      };
      event_registrations: {
        Row: {
          id: string;
          event_id: string;
          member_id: string;
          status: 'pending' | 'confirmed' | 'cancelled' | 'attended';
          registration_date: string;
          number_of_guests: number;
          total_attendees: number;
          amount_paid: number;
          payment_method: 'online' | 'check' | 'cash' | 'credit_card' | 'bank_transfer' | null;
          payment_date: string | null;
          checked_in: boolean;
          check_in_time: string | null;
          attended: boolean;
          dietary_restrictions: string | null;
          special_requests: string | null;
          notes: string | null;
          created_at: string;
          updated_at: string;
        };
        Insert: {
          id?: string;
          event_id: string;
          member_id: string;
          status?: 'pending' | 'confirmed' | 'cancelled' | 'attended';
          registration_date?: string;
          number_of_guests?: number;
          amount_paid?: number;
          payment_method?: 'online' | 'check' | 'cash' | 'credit_card' | 'bank_transfer' | null;
          payment_date?: string | null;
          checked_in?: boolean;
          check_in_time?: string | null;
          attended?: boolean;
          dietary_restrictions?: string | null;
          special_requests?: string | null;
          notes?: string | null;
          created_at?: string;
          updated_at?: string;
        };
        Update: {
          id?: string;
          event_id?: string;
          member_id?: string;
          status?: 'pending' | 'confirmed' | 'cancelled' | 'attended';
          registration_date?: string;
          number_of_guests?: number;
          amount_paid?: number;
          payment_method?: 'online' | 'check' | 'cash' | 'credit_card' | 'bank_transfer' | null;
          payment_date?: string | null;
          checked_in?: boolean;
          check_in_time?: string | null;
          attended?: boolean;
          dietary_restrictions?: string | null;
          special_requests?: string | null;
          notes?: string | null;
          created_at?: string;
          updated_at?: string;
        };
      };
      communications: {
        Row: {
          id: string;
          type: 'newsletter' | 'email_campaign' | 'social_media' | 'direct_email';
          subject: string;
          content: string;
          recipient_segments: string[];
          total_recipients: number;
          sent_at: string | null;
          delivery_rate: number;
          open_rate: number;
          click_rate: number;
          platform: string | null;
          scheduled_for: string | null;
          from_email: string | null;
          reply_to_email: string | null;
          template_id: string | null;
          tags: string[] | null;
          created_at: string;
          updated_at: string;
          created_by: string | null;
        };
        Insert: {
          id?: string;
          type: 'newsletter' | 'email_campaign' | 'social_media' | 'direct_email';
          subject: string;
          content: string;
          recipient_segments: string[];
          total_recipients?: number;
          sent_at?: string | null;
          delivery_rate?: number;
          open_rate?: number;
          click_rate?: number;
          platform?: string | null;
          scheduled_for?: string | null;
          from_email?: string | null;
          reply_to_email?: string | null;
          template_id?: string | null;
          tags?: string[] | null;
          created_at?: string;
          updated_at?: string;
          created_by?: string | null;
        };
        Update: {
          id?: string;
          type?: 'newsletter' | 'email_campaign' | 'social_media' | 'direct_email';
          subject?: string;
          content?: string;
          recipient_segments?: string[];
          total_recipients?: number;
          sent_at?: string | null;
          delivery_rate?: number;
          open_rate?: number;
          click_rate?: number;
          platform?: string | null;
          scheduled_for?: string | null;
          from_email?: string | null;
          reply_to_email?: string | null;
          template_id?: string | null;
          tags?: string[] | null;
          created_at?: string;
          updated_at?: string;
          created_by?: string | null;
        };
      };
      communication_recipients: {
        Row: {
          id: string;
          communication_id: string;
          member_id: string;
          delivered: boolean;
          delivered_at: string | null;
          opened: boolean;
          opened_at: string | null;
          clicked: boolean;
          clicked_at: string | null;
          bounced: boolean;
          unsubscribed: boolean;
          created_at: string;
        };
        Insert: {
          id?: string;
          communication_id: string;
          member_id: string;
          delivered?: boolean;
          delivered_at?: string | null;
          opened?: boolean;
          opened_at?: string | null;
          clicked?: boolean;
          clicked_at?: string | null;
          bounced?: boolean;
          unsubscribed?: boolean;
          created_at?: string;
        };
        Update: {
          id?: string;
          communication_id?: string;
          member_id?: string;
          delivered?: boolean;
          delivered_at?: string | null;
          opened?: boolean;
          opened_at?: string | null;
          clicked?: boolean;
          clicked_at?: string | null;
          bounced?: boolean;
          unsubscribed?: boolean;
          created_at?: string;
        };
      };
      automations: {
        Row: {
          id: string;
          name: string;
          description: string | null;
          trigger_type: string;
          trigger_conditions: Record<string, any> | null;
          actions: Array<Record<string, any>>;
          status: 'active' | 'paused' | 'completed' | 'error';
          last_run: string | null;
          next_run: string | null;
          run_count: number;
          created_at: string;
          updated_at: string;
          created_by: string | null;
        };
        Insert: {
          id?: string;
          name: string;
          description?: string | null;
          trigger_type: string;
          trigger_conditions?: Record<string, any> | null;
          actions: Array<Record<string, any>>;
          status?: 'active' | 'paused' | 'completed' | 'error';
          last_run?: string | null;
          next_run?: string | null;
          run_count?: number;
          created_at?: string;
          updated_at?: string;
          created_by?: string | null;
        };
        Update: {
          id?: string;
          name?: string;
          description?: string | null;
          trigger_type?: string;
          trigger_conditions?: Record<string, any> | null;
          actions?: Array<Record<string, any>>;
          status?: 'active' | 'paused' | 'completed' | 'error';
          last_run?: string | null;
          next_run?: string | null;
          run_count?: number;
          created_at?: string;
          updated_at?: string;
          created_by?: string | null;
        };
      };
      automation_logs: {
        Row: {
          id: string;
          automation_id: string;
          member_id: string | null;
          trigger_data: Record<string, any> | null;
          actions_executed: Array<Record<string, any>> | null;
          success: boolean;
          error_message: string | null;
          created_at: string;
        };
        Insert: {
          id?: string;
          automation_id: string;
          member_id?: string | null;
          trigger_data?: Record<string, any> | null;
          actions_executed?: Array<Record<string, any>> | null;
          success?: boolean;
          error_message?: string | null;
          created_at?: string;
        };
        Update: {
          id?: string;
          automation_id?: string;
          member_id?: string | null;
          trigger_data?: Record<string, any> | null;
          actions_executed?: Array<Record<string, any>> | null;
          success?: boolean;
          error_message?: string | null;
          created_at?: string;
        };
      };
      member_activities: {
        Row: {
          id: string;
          member_id: string;
          activity_type: string;
          activity_description: string | null;
          activity_value: number | null;
          related_donation_id: string | null;
          related_event_id: string | null;
          related_communication_id: string | null;
          created_at: string;
        };
        Insert: {
          id?: string;
          member_id: string;
          activity_type: string;
          activity_description?: string | null;
          activity_value?: number | null;
          related_donation_id?: string | null;
          related_event_id?: string | null;
          related_communication_id?: string | null;
          created_at?: string;
        };
        Update: {
          id?: string;
          member_id?: string;
          activity_type?: string;
          activity_description?: string | null;
          activity_value?: number | null;
          related_donation_id?: string | null;
          related_event_id?: string | null;
          related_communication_id?: string | null;
          created_at?: string;
        };
      };
    };
    Views: {
      [_ in never]: never;
    };
    Functions: {
      calculate_member_tier: {
        Args: {
          total_amount: number;
        };
        Returns: 'bronze' | 'silver' | 'gold' | 'platinum';
      };
      get_user_id: {
        Args: Record<PropertyKey, never>;
        Returns: string;
      };
      get_user_role: {
        Args: Record<PropertyKey, never>;
        Returns: string;
      };
    };
    Enums: {
      automation_status: 'active' | 'paused' | 'completed' | 'error';
      communication_type: 'newsletter' | 'email_campaign' | 'social_media' | 'direct_email';
      donation_method: 'online' | 'check' | 'cash' | 'credit_card' | 'bank_transfer';
      event_status: 'draft' | 'published' | 'active' | 'completed' | 'cancelled';
      member_tier: 'bronze' | 'silver' | 'gold' | 'platinum';
      registration_status: 'pending' | 'confirmed' | 'cancelled' | 'attended';
    };
    CompositeTypes: {
      [_ in never]: never;
    };
  };
}